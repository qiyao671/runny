<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--suppress ALL -->
<mapper namespace="com.wyq.study.dao.RunnyTrackMapper">
    <resultMap id="BaseResultMap" type="com.wyq.study.pojo.RunnyTrack">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="log_id" property="logId" jdbcType="INTEGER"/>
        <result column="track" property="track" jdbcType="VARCHAR"/>
        <result column="serial" property="serial" jdbcType="INTEGER"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, log_id, track, serial, gmt_create, gmt_modified
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from runny_track
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByLogId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from runny_track
        where log_id = #{logId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from runny_track
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.wyq.study.pojo.RunnyTrack">
    insert into runny_track (id, log_id, track, serial,
      gmt_create, gmt_modified)
    values (#{id,jdbcType=INTEGER}, #{logId,jdbcType=INTEGER}, #{track,jdbcType=VARCHAR}, #{serial,jdbcType=INTEGER},
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.wyq.study.pojo.RunnyTrack">
        insert into runny_track
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="logId != null">
                log_id,
            </if>
            <if test="track != null">
                track,
            </if>
            <if test="serial != null">
                serial,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="logId != null">
                #{logId,jdbcType=INTEGER},
            </if>
            <if test="track != null">
                #{track,jdbcType=VARCHAR},
            </if>
            <if test="serial != null">
                #{serial,jdbcType=INTEGER},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wyq.study.pojo.RunnyTrack">
        update runny_track
        <set>
            <if test="logId != null">
                log_id = #{logId,jdbcType=INTEGER},
            </if>
            <if test="track != null">
                track = #{track,jdbcType=VARCHAR},
            </if>
            <if test="serial != null">
                serial = #{serial,jdbcType=INTEGER},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wyq.study.pojo.RunnyTrack">
    update runny_track
    set log_id = #{logId,jdbcType=INTEGER},
      track = #{track,jdbcType=VARCHAR},
      serial = #{serial,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>