<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--suppress ALL -->
<mapper namespace="com.wyq.study.dao.MomentMapper">
    <resultMap id="BaseResultMap" type="com.wyq.study.pojo.Moment">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="picture" property="picture" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="SMALLINT"/>
    </resultMap>

    <resultMap id="ResultMapWithBLOBs" type="com.wyq.study.pojo.Moment" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <resultMap id="ResultMapWithUser" type="com.wyq.study.pojo.Moment" extends="ResultMapWithBLOBs">
        <association property="user" columnPrefix="user_" javaType="com.wyq.study.pojo.User" resultMap="userResultMap"/>
    </resultMap>

    <resultMap id="userResultMap" type="com.wyq.study.pojo.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username"/>
        <result column="profile" property="profile"/>
    </resultMap>

    <resultMap id="approveResultMap" type="com.wyq.study.pojo.Approve">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="moment_id" property="momentId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="SMALLINT"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <association property="user" columnPrefix="user_" javaType="com.wyq.study.pojo.User" resultMap="userResultMap"/>
    </resultMap>

    <resultMap id="commentResultMap" type="com.wyq.study.pojo.Comment">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="moment_id" property="momentId" jdbcType="INTEGER"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="replied_user_id" property="repliedUserId" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="SMALLINT"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <association property="user" columnPrefix="user_" javaType="com.wyq.study.pojo.User" resultMap="userResultMap" />
        <association property="repliedUser" columnPrefix="replied_user_" javaType="com.wyq.study.pojo.User" resultMap="userResultMap" />
    </resultMap>

    <resultMap id="ResultMapWithUserAndApprovesAndComments" type="com.wyq.study.pojo.Moment"
               extends="ResultMapWithUser">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <collection property="commentList" columnPrefix="comment_" ofType="com.wyq.study.pojo.Comment" resultMap="commentResultMap"/>
        <collection property="approveList" columnPrefix="approve_" ofType="com.wyq.study.pojo.Approve"
                    resultMap="approveResultMap"/>
    </resultMap>

    <sql id="Base_Column_List">
      id, user_id, title, picture, gmt_create, gmt_modified, status
    </sql>
    <sql id="Blob_Column_List">
      content
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from moment
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="listUserMoments" resultMap="ResultMapWithBLOBs" parameterType="com.wyq.study.pojo.Moment">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from moment
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="maxId != null and maxId!=''">
                AND id > #{maxId,jdbcType=INTEGER}
            </if>
            <if test="minId != null and minId!=''">
                AND id <![CDATA[<]]> #{minId,jdbcType=INTEGER}
            </if>
            AND user_id = #{userId,jdbcType=INTEGER}
        </trim>
        order by gmt_create desc
    </select>
    <select id="listPageMoments" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from moment
        where user_id in (SELECT friend_id from friend WHERE user_id = #{userId,jdbcType=INTEGER}) OR user_id =
        #{userId,jdbcType=INTEGER}
        order by gmt_create desc
    </select>
    <select id="listNewestMoments" resultMap="ResultMapWithBLOBs" parameterType="com.wyq.study.pojo.Moment">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from moment
        <trim prefix="WHERE" prefixOverrides="AND |OR">
            <if test="maxId != null and maxId!=''">
                AND id > #{maxId,jdbcType=INTEGER}
            </if>
            <if test="minId != null and minId!=''">
                AND id <![CDATA[<]]> #{minId,jdbcType=INTEGER}
            </if>
            AND (user_id in (SELECT friend_id from friend WHERE user_id = #{userId,jdbcType=INTEGER}) OR user_id =
            #{userId,jdbcType=INTEGER})
        </trim>
        order by gmt_create desc
    </select>
    <select id="listMoreMoments" resultMap="ResultMapWithBLOBs" parameterType="com.wyq.study.pojo.Moment">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from moment
        <trim prefix="WHERE" prefixOverrides="AND |OR">
            <if test="maxId != null and maxId!=''">
                AND id > #{maxId,jdbcType=INTEGER}
            </if>
            <if test="minId != null and minId!=''">
                AND id <![CDATA[<]]> #{minId,jdbcType=INTEGER}
            </if>
            AND (user_id in (SELECT friend_id from friend WHERE user_id = #{userId,jdbcType=INTEGER}) OR user_id =
            #{userId,jdbcType=INTEGER})
        </trim>
        order by gmt_create desc
    </select>
    <select id="listUserMomentByUserId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from moment
        where user_id = #{userId,jdbcType=INTEGER}
        order by gmt_create ASC
    </select>

    <select id="selectMomentByPrimaryKey" parameterType="java.lang.Integer"
            resultMap="ResultMapWithUserAndApprovesAndComments">
                SELECT m.*, u.username AS user_username, u.`profile` AS user_profile,
			a.id AS approve_id, a.moment_id AS approve_moment_id, a.`status` AS approve_status,
			a.user_id AS approve_user_id, a.`profile` as approve_user_profile, a.username AS approve_user_username,
			c.moment_id AS comment_moment_id, c.content as comment_content, c.id as comment_id, c.user_id as comment_user_id, c.replied_user_id as comment_replied_user_id, c.`status` AS coment_status, c.gmt_create as comment_gmt_create,
			c.comment_replied_user_profile, c.comment_replied_user_username, c.comment_user_profile, c.comment_user_username
FROM moment m
LEFT OUTER JOIN user u ON m.user_id = u.id
LEFT OUTER JOIN (SELECT approve.*, profile, username FROM approve, `user` where user_id = `user`.id) a ON a.moment_id = m.id
LEFT OUTER JOIN (SELECT `comment`.*, a.username AS comment_user_username, a.`profile` as comment_user_profile, b.username AS comment_replied_user_username, b.`profile` AS comment_replied_user_profile
                        FROM comment
                        LEFT OUTER JOIN user a ON user_id = a.id
                        LEFT OUTER JOIN user b ON replied_user_id = b.id) c ON c.moment_id = m.id
        WHERE m.id = #{userId,jdbcType=INTEGER}
    </select>
    
    <select id="listFriendsMoment" resultMap="ResultMapWithUserAndApprovesAndComments">
        SELECT mu.*, a.id AS approve_id, a.moment_id AS approve_moment_id, a.`status` AS approve_status,
                a.user_id AS approve_user_id, a.`profile` as approve_user_profile, a.username AS approve_user_username,
                c.moment_id AS comment_moment_id, c.content as comment_content, c.id as comment_id, c.user_id as comment_user_id, c.replied_user_id as comment_replied_user_id, c.`status` AS coment_status, c.gmt_create as comment_gmt_create,
                c.comment_replied_user_profile, c.comment_replied_user_username, c.comment_user_profile, c.comment_user_username
        FROM
        (SELECT m.*, u.username AS user_username, u.`profile` AS user_profile
                FROM moment m
                LEFT OUTER JOIN user u ON m.user_id = u.id
        WHERE (u.id IN (SELECT user_id FROM friend WHERE friend_id = #{userId,jdbcType=INTEGER}
                       UNION
                       SELECT friend_id as user_id FROM friend WHERE user_id = #{userId,jdbcType=INTEGER})
        OR u.id = #{userId,jdbcType=INTEGER})
        <if test="maxId == null and pageSize != null">
            <if test="minId != null">
                AND m.id <![CDATA[<]]> #{minId, jdbcType=INTEGER}
            </if>
            ORDER BY m.gmt_create DESC
            LIMIT 0, #{pageSize, jdbcType=INTEGER}
        </if>
        <if test="maxId != null">
            AND m.id > #{maxId, jdbcType=INTEGER}
            ORDER BY m.gmt_create DESC
        </if>) AS mu
        LEFT OUTER JOIN (SELECT approve.*, profile, username FROM approve, `user` where user_id = `user`.id) a ON a.moment_id = mu.id
        LEFT OUTER JOIN (SELECT `comment`.*, a.username AS comment_user_username, a.`profile` as comment_user_profile, b.username AS comment_replied_user_username, b.`profile` AS comment_replied_user_profile
                            FROM comment
                            LEFT OUTER JOIN user a ON user_id = a.id
                            LEFT OUTER JOIN user b ON replied_user_id = b.id) c ON c.moment_id = mu.id
        ORDER BY mu.gmt_create DESC
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from moment
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteMoment" parameterType="com.wyq.study.pojo.Moment">
    delete from moment
    where id = #{id,jdbcType=INTEGER} AND user_id = #{userId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.wyq.study.pojo.Moment">
    insert into moment (id, user_id, title, 
      picture, gmt_create, gmt_modified, 
      status, content)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{picture,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=SMALLINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.wyq.study.pojo.Moment">
        insert into moment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="picture != null">
                picture,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                #{picture,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=SMALLINT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wyq.study.pojo.Moment">
        update moment
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                picture = #{picture,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=SMALLINT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wyq.study.pojo.Moment">
    update moment
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.wyq.study.pojo.Moment">
    update moment
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>